<!DOCTYPE html>
<html lang="en">
  <head>
  	<meta charset="utf-8" />
  	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

    <title><%= title %></title>

    <link rel="shortcut icon" href="/images/favicon.ico" />
    <link rel="apple-touch-icon" href="/images/apple-touch-icon.png" />

    <link rel='stylesheet' href='/stylesheets/reset.css' />
    <link rel='stylesheet' href='/stylesheets/main.css' />

    <script src="/javascripts/cookies.js"></script>

    <script>

      function showProps(obj, ownPropsOnly) {
        var output = '';

        for(var prop in obj) {
          if(ownPropsOnly && obj.hasOwnProperty(prop)) {
            output += prop.toString() + '\n';
          }
        }

        alert(output);
      }

      function guidGenerator() {
        var S4 = function() {
          return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
        };

        return (S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4());
      }

      function ensureUniqueName(newName) {
        var usersList = document.querySelectorAll('#UsersList > ul > li');

        for(var i = 0; i < usersList.length; i++) {

          var listItem = usersList[i];

          var itemId = listItem.id;
          var itemName = listItem.textContent;

          if(newName === itemName && itemId !== clientId) {
            if(newName.match(/.+\_[0-9]+$/)) {
              var underscoreElements = newName.split('_');
              var increment = parseInt(underscoreElements[underscoreElements.length - 1]);

              increment++;

              newName = newName.replace(/(.+)\_([0-9]+)$/, '$1') + ('_' + increment);
            }
            else {
              newName = newName + '_1';
            }
          }
        }

        return newName;
      }

      function attachChangeNameEvent(currentName, socket) {
        document.querySelector('#UsersList .changeName').addEventListener('click', function(event) {
          var item = this.parentNode;
          item.textContent = '';

          var textbox = document.createElement('input');
          textbox.setAttribute('type', 'text');
          textbox.setAttribute('value', currentName);

          item.appendChild(textbox);

          var button = document.createElement('input');
          button.setAttribute('type', 'button');
          button.setAttribute('value', 'Set');

          item.appendChild(button);

          button.addEventListener('click', function(event) {
            var newName = ensureUniqueName(textbox.value).trim();
            item.innerHTML = newName + ' <span class="changeName">(<span>change</span>)</span>';

            if(currentName !== newName)
            {
              socket.send(JSON.stringify({
                type: 'setName',
                value: newName
              }));

              Cookie.set('clientName', newName);
            }

            attachChangeNameEvent(newName, socket);
          });
        });
      }

      document.addEventListener('DOMContentLoaded', function() {

        'use strict';

        var clientId;

        if(Cookie.has('clientId')) {
          clientId = Cookie.get('clientId');
        }
        else {
          clientId = guidGenerator();
          Cookie.set('clientId', clientId);
        }

        // document.getElementById('TestSocket').addEventListener('click', function(event) {

        //     var name = document.getElementById('NameBox').value;

        //     var command = {
        //       id: clientId,
        //       type: 'setName',
        //       value: name
        //     };

        //     socket.send(JSON.stringify(command));
        // });

        var socket;
        var url = 'ws://' + document.URL.substr(7).split('/')[0];

        if (typeof(MozWebSocket) != 'undefined') {
          socket = new MozWebSocket(url, 'chat');
        }

        if (typeof(WebSocket) != 'undefined') {
          socket = new WebSocket(url, 'chat');
        }

        if (socket) {
          socket.onmessage = function(event) {

            var command = JSON.parse(event.data);

            if(command.type === 'setName') {
              var usersList = document.querySelectorAll('#UsersList > ul > li');

              for(var i = 0; i < usersList.length; i++) {
                
              }
            }

            //alert(cmd);
          };

          socket.onclose = function() {
            alert('socket closed');
          };

          socket.onerror = function(event) {
              alert('socket error'); 
          };

          var name = Cookie.get('clientName') || 'Numpty_1';

          var usersList = document.querySelectorAll('#UsersList > ul > li');
          var existingUserItem;

          for(var i = 0; i < usersList.length; i++) {

            var listItem = usersList[i];

            var itemId = listItem.id;
            if(clientId === itemId) {

              existingUserItem = listItem;
            }
            else {

              var itemName = listItem.textContent;

              if(name === itemName) {
                if(name.match(/.+\_[0-9]+$/)) {
                  var underscoreElements = name.split('_');
                  var increment = parseInt(underscoreElements[underscoreElements.length - 1]);

                  increment++;

                  name = name.replace(/(.+)\_([0-9]+)$/, '$1') + ('_' + increment);
                }
              }
            }
          }

          Cookie.set('clientName', name);

          var userItemHtml = name + ' <span class="changeName">(<span>change</span>)</span>';

          if(!existingUserItem) {
            var newListItem = document.createElement('li');
            newListItem.setAttribute('class', 'current');
            newListItem.innerHTML = userItemHtml;
            newListItem.id = clientId;
            document.querySelector('#UsersList > ul').appendChild(newListItem);
          }
          else {
            existingUserItem.innerHTML = userItemHtml;
          }

          attachChangeNameEvent(name, socket);

          socket.onopen = function() {

            var command = {
              id: clientId,
              type: 'init',
              value: name
            };

            socket.send(JSON.stringify(command));
          };
        }
        else {
          alert('WebSockets are NOT supported!');
        }
      }, false);
    </script>
    
  </head>

  <body>
    <header>
      <hgroup>
        <h1>Nodecamp</h1>
        <h2>WebSocket chatroom written in Node.js</h2>
      </hgroup>
    </header>

    <div id="Middle">
      <h1>Random Chatroom</h1>

      <section id="ChatWindow">
        <h2>Conversion</h2>

        <article>
          <h3>John:</h3>
          <p>
            Twenty-four hours a day, the latest national and international
            stories as they break.
          </p>
        </article>

        <article>
          <h3>Tim:</h3>
          <p>
            Twenty-four hours a day, the latest national and international
            stories as they break. wenty-four hours a day, the latest
            national and international stories as they break.
          </p>
        </article>

        <article>
          <h3>John:</h3>
          <p>
            Twenty-four hours a day, the latest national and international
            stories as they break.
          </p>
        </article>

        <article>
          <h3>John:</h3>
          <p>
            Twenty-four hours a day, the latest national and international
            stories as they break.
          </p>
        </article>

        <article>
          <h3>Tim:</h3>
          <p>
            Twenty-four hours a day, the latest national and international
            stories as they break.
          </p>
        </article>

        <fieldset>
          <legend>Tim:</legend>

          <label>Message</label>
          <textarea id="ChatBox" cols="30" rows="10"></textarea>
        </fieldset>
      </section>

      <section id="UsersList">
        <h2>Who's Online</h2>

        <ul>
          <% for(var i = 0; i < clients.length; i++) { %>
            <li id="<%= clients[i].id %>" class="<%= clients[i].id === currentClientId ? 'current' : '' %>">
              <%= clients[i].name %>
              <% if(clients[i].id === currentClientId) { %>
                <span class="changeName">(<span>change</span>)</span>
              <% } %>
            </li>
          <% } %>
        </ul>

      </section>
    </div>

    <footer>
      <small>
        Fork me on Github at
        <a href="http://github.com/Sironfoot/Nodecamp">http://github.com/Sironfoot/Nodecamp</a>
      </small>
    </footer>

    <%- body %>
  </body>
</html>